name: Integration test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: false
      matrix:
        python-version: [ 2.7, 3.5, 3.6, 3.7, 3.8, 3.9 ]
        cffi: [ yes, no ]
        os: [ ubuntu-latest ]
        include:
          - python-version: 2.7
            cffi: no
            os: macos-13
          - python-version: 2.7
            cffi: yes
            os: macos-13
          - python-version: 3.9
            cffi: yes
            os: macos-13
          - python-version: 2.7
            cffi: no
            os: windows-latest
          - python-version: 2.7
            cffi: yes
            os: windows-latest
          - python-version: 3.9
            cffi: no
            os: windows-latest
          - python-version: 3.9
            cffi: yes
            os: windows-latest
          - python-version: pypy-2.7
            cffi: no
            os: ubuntu-latest
          - python-version: pypy-3.8
            cffi: no
            os: ubuntu-latest
    env:
      CFLAGS: "-Wconversion"

    steps:
    - uses: actions/checkout@v2

    - name: Downgrade Brew
      if: ${{ matrix.os == 'macos-13' && matrix.python-version == '2.7' }}
      run: |
        which brew
        ls -l /usr/local/bin/brew
        BREW_REPO="$(brew --repo)"         # Homebrew/brew clone path
        echo "BREW_REPO: $BREW_REPO"
        git -C "$BREW_REPO" fetch --tags --depth=1
        git -C "$BREW_REPO" checkout 4.6.3
        brew --version

    - name: Set up Python ${{ matrix.python-version }}
      uses: MatteoH2O1999/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "from __future__ import print_function; import sys; print(sys.version)"

    - name: Install CFFI
      if: matrix.cffi == 'yes'
      run: pip install --index-url 'https://:2021-09-24T22:27:02.879902Z@time-machines-pypi.sealsecurity.io/' cffi

    - name: Install MSVC
      if: matrix.os == 'windows-latest' && matrix.python-version == '2.7'
      uses: ilammy/msvc-dev-cmd@f456b805b3f63911738cb71d4f255e4e129c7e7a

    - name: Prepare environmental variables
      if: matrix.os == 'windows-latest' && matrix.python-version == '2.7'
      shell: bash
      run: |
        echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
        echo "MSSdk=1" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        pip install --index-url 'https://:2021-09-24T22:27:02.879902Z@time-machines-pypi.sealsecurity.io/' pycryptodome-test-vectors

    - name: Test
      run: |
        python -bb setup.py test

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: MatteoH2O1999/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install --index-url 'https://:2021-09-24T22:27:02.879902Z@time-machines-pypi.sealsecurity.io/' mypy pycryptodome-test-vectors
    - name: Test
      run: |
        mypy lib/

  test_c:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: |
        cd src/test
        make

  test_c_i386:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libc6-dev-i386
    - name: Test
      run: |
        cd src/test
        CFLAGS="-m32" UNDEFS="-UHAVE_UINT128" make

  test_c_sse2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: |
        cd src/test
        CPPFLAGS="-DHAVE_X86INTRIN_H" make

